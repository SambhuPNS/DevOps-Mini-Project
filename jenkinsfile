pipeline {
    agent any

    environment{
        DOCKER_IMAGE_NAME = 'java_calculator'
        GITHUB_REPO_URL = 'https://github.com/SambhuPNS/SPE_MiniProject.git'
	DOCKER_REGISTRY_CREDENTIALS = credentials('DOCKERHUBCRED')

	DOCKER_PASSWORD = 'Sambhu@123'
	DOCKER_USERNAME = 'sambhuss'
	//DOCKER_USERNAME = credentials('DockerHubCred').username
        //DOCKER_PASSWORD = credentials('DockerHubCred').password
	DOCKER_REGISTRY = 'https://docker.io/sambhuss'
    }

    stages {
        stage('GIT CHECKOUT') {
            steps {
                script {
                        // Checkout the code from the GitHub repository
			git branch: 'main', credentialsId: 'webhook-token', url: "${GITHUB_REPO_URL}"
                }
            }
        }
        stage('MAVEN BUILD') {
            steps {
		//build project
                sh 'mvn clean install'
            }
        }

        stage('MAVEN TEST') {
             steps {
                 sh 'mvn test'
             }
        }

        stage('BUILD DOCKER IMAGE') {
            steps {
                    script {
                        //docker.build("${DOCKER_IMAGE_NAME}", '.')
			sh 'docker build -t $DOCKER_IMAGE_NAME .'
                    }
            }
        }
     

	stage('Push Docker Image') {
	            steps {
	                // Docker login with credentials
	                withCredentials([usernamePassword(credentialsId: DOCKERHUBCRED, passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
		            // Log in to Docker registry
		            sh "docker login --username ${DOCKER_USERNAME} --password-stdin ${DOCKER_PASSWORD}"
		
		            // Tag the Docker image with the desired repository name
		            sh "docker tag sambhuss/java_calculator ${DOCKER_USERNAME}/spe-repo:latest"
		
		            // Push the Docker image to Docker Hub with the specified repository
		            sh "docker push ${DOCKER_USERNAME}/spe-repo:latest"
       			 }
		}
	}
	
        stage('RUN ANSIBLE PLAYBOOK') {
            steps {
                script {
                    ansiblePlaybook(
                        playbook: 'deploy.yml',
                        inventory: 'inventory'
                    )
                }
            }
        }
    }
}
